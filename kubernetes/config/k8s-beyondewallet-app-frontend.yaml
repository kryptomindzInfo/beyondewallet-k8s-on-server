apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: beyondewallet-frontend
  labels:
    app: beyondewallet-frontend
spec:
  serviceName: beyondewallet-frontend
  replicas: 1
  selector:
    matchLabels:
      app: beyondewallet-frontend
  template:
    metadata:
      labels: # labels to select/identify the deployment
        app: beyondewallet-frontend
    spec: # pod spec
      containers:
        - name: beyondewallet-frontend
          image: beyondewallet/app-frontend:demo2022 # image we pushed
          imagePullPolicy: Always
          #command: [ "/bin/sh", "-c", "env" ]
          env:
          - name: REACT_APP_SERVER_IP
            value: 164.92.97.182
          ports:
            - containerPort: 80
          volumeMounts:
            - name: beyondewallet-frontend-pvc
              mountPath: /var/app
            - name: frontend-env-file
              mountPath: /var/app/.env
              readOnly: true
      volumes:
        - name: frontend-env-file
          configMap:
            name: frontend-env
  volumeClaimTemplates:
    - metadata:
        name: beyondewallet-frontend-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 2Gi

---
# Expose the port 30751 as node port -  NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: beyondewallet-frontend-clusterip

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: beyondewallet-frontend

  ports:
    - name: beyondewallet-frontend-clusterip
      port: 80

  type: ClusterIP

---
# Expose the port 30751 as node port -  NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: beyondewallet-frontend-nodeport

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: beyondewallet-frontend

  ports:
    - name: beyondewallet-frontend-nodeport
      port: 4000
      targetPort: 80
      nodePort: 31080

  type: NodePort
